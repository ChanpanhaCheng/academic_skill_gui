/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import java.util.HashMap;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import user.Student;
import user.User;

/**
 *
 * @author vathanak
 */
public class StudentGrading extends javax.swing.JPanel {

    /**
     * Creates new form StudentGrading
     * @param listStu
     */
    String course_instacne_id;
    public StudentGrading(HashMap<String,User> listStu,String c_id) {
        initComponents();
        course_instacne_id = c_id;
        DefaultTableModel stuGradeModel = (DefaultTableModel) stuGrade.getModel();
        for(User s:listStu.values()){
            if(s instanceof Student){
                Student stu = (Student)s;
                stuGradeModel.addRow(stu.toObjectArrayTwoData());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        stuGrade = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        stuGrade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Score"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(stuGrade);

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(342, 342, 342)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       DefaultTableModel stuGradeModel = (DefaultTableModel) stuGrade.getModel();
    
    // Debug: Print entire table data
    System.out.println("Table Data:");
    for (int i = 0; i < stuGradeModel.getRowCount(); i++) {
        for (int j = 0; j < stuGradeModel.getColumnCount(); j++) {
            System.out.print(stuGradeModel.getValueAt(i, j) + "\t");
        }
        System.out.println();
    }

    // Find the column index for "Score"
    int scoreColumnIndex = stuGradeModel.findColumn("Score"); 

    if (scoreColumnIndex == -1) {
        System.out.println("Column 'Score' not found!");
        return;
    }

    // Retrieve and print all values from "Score" column
    System.out.println("Scores:");
    for (int i = 0; i < stuGradeModel.getRowCount(); i++) {
            Object score = stuGradeModel.getValueAt(i, scoreColumnIndex);
            float scoreValue = 0.0f;
            if (score instanceof Number) {
                scoreValue = ((Number) score).floatValue();
            } else {
                try {
                    scoreValue = Float.parseFloat(score.toString());
                } catch (NumberFormatException e) {
                    System.out.println("Error: Invalid score format");
                }
            }
            String cl_id = course_instacne_id;
            String[] parts = cl_id.split("-");

            String year = parts[0];        
            String term = parts[1];        
            String group = parts[2].substring(1);
            String shortName = parts[3]; 
            String qu = "INSERT INTO Grade (instance_id ,stu_id,score,session_no) VALUES((SELECT course_instance_id FROM Course_instance WHERE year = "+year+" AND term = "+term+" AND group_s = '"+group+"' AND short_name = '"+shortName+"'),'S1',"+scoreValue+",1);";
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable stuGrade;
    // End of variables declaration//GEN-END:variables
}
